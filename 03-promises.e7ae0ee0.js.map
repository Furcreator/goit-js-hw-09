{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SAsBzC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA/BPL,EAAUa,iBAAiB,UAE3B,SAAsBC,GACpB,IAAMC,EAAUf,EAAUgB,KAAKC,MACzBC,EAAWlB,EAAUK,MAAMY,MAC3BE,EAAYnB,EAAUoB,OAAOH,MACnCH,EAAEO,iBACF,IAAIC,EAAYC,OAAOL,GACvBM,QAAQC,IAAIH,GACZ,IAAK,IAAII,EAAI,EAAGA,GAAKP,EAAWO,IAC9BvB,EAAcuB,EAAGJ,GAAWK,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAC5CP,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE5D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBP,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9DiB,GAAaC,OAAOR,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputForm = document.querySelector('.form');\ninputForm.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  const stepInp = inputForm.step.value;\n  const delayInp = inputForm.delay.value;\n  const amountInp = inputForm.amount.value;\n  e.preventDefault();\n  let delayTime = Number(delayInp);\n  console.log(delayTime);\n  for (let i = 1; i <= amountInp; i++) {\n    createPromise(i, delayTime).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += Number(stepInp)\n    // console.log(delayTime);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","stepInp","step","value","delayInp","amountInp","amount","preventDefault","delayTime","Number","console","log","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e7ae0ee0.js.map"}