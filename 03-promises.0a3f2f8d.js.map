{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,SAsBzC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbL,EAAUa,iBAAiB,UAE3B,SAAsBC,GACpB,MAAMC,EAAUf,EAAUgB,KAAKC,MACzBC,EAAWlB,EAAUK,MAAMY,MAC3BE,EAAYnB,EAAUoB,OAAOH,MACnCH,EAAEO,iBACF,IAAIC,EAAYC,OAAOL,GACvBM,QAAQC,IAAIH,GACZ,IAAK,IAAII,EAAI,EAAGA,GAAKP,EAAWO,IAC9BvB,EAAcuB,EAAGJ,GAAWK,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAC5CP,EAAA8B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAE9DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBP,EAAA8B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEhEiB,GAAaC,OAAOR,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputForm = document.querySelector('.form');\ninputForm.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  const stepInp = inputForm.step.value;\n  const delayInp = inputForm.delay.value;\n  const amountInp = inputForm.amount.value;\n  e.preventDefault();\n  let delayTime = Number(delayInp);\n  console.log(delayTime);\n  for (let i = 1; i <= amountInp; i++) {\n    createPromise(i, delayTime).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += Number(stepInp)\n    // console.log(delayTime);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputForm","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","stepInp","step","value","delayInp","amountInp","amount","preventDefault","delayTime","Number","console","log","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0a3f2f8d.js.map"}